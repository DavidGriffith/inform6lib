The Inform Library version 6/12 introduces a fun new way of storytelling 
by allowing the author to use first-person and third-person narrative 
voices.  The typical way to write interactive fiction has been for the 
game to talk about the player in the second-person narrative voice.  For 
example:

  > PUT COOKIE ON TABLE
  You put the cookie on the table.

That's how Infocom usually did things and is Inform's default.  Now 
suppose you, the author, want the story to read more like an 
autobiography.  Consider this:

  > PUT COOKIE ON TABLE
  I put the cookie on the table.

This is the first-person narrative voice.  Third-person narrative voice 
looks like this:

  > PUT COOKIE ON TABLE
  George puts the cookie on the table.

To cause these alternative narrative voices, the player object needs to 
have a narrative_voice property with a value of 1 or 3.  Setting it to 2 
results in the old regular behavior.  It's most convenient to do this in 
the Initialise() routine like this:

  [ Initialise;
      location = TheRoom;
      player.narrative_voice = 1;
  ];

For third-person mode, some additional properties are necessary:

  [ Initialise;
      location = TheRoom;
      player.narrative_voice = 3;
      player.short_name = "George Jones";
      (player.&name)-->0 = 'George';
      (player.&name)-->1 = 'Jones';
  ];

The name property must be specified like this.  There are five slots to 
which you may add dictionary words.

That's all there is to it.  This does, however, require a bit more 
discipline when it comes to writing your prose and dealing with the 
default responses from new verbs you introduce.  If the player always 
controls the same character and/or the narrative voice never changes, 
you can write your verb subroutines to always talk about George.  If the 
player changes characters or the narrative voice changes, things get a 
bit more complicated.  Problems like that can be solved by careful use 
of the CSubject functions which are detailed at the end of this 
document.

Previously if you changed the player-character to something other than 
selfobj, the former player-character would be described as "Your former 
self" when typing "LOOK".  If you want to change bodies like this, you 
must set player.short_name even if you use the old regular second-person 
voice.  Make sure the narrative_voice, short_name, and name properties 
are all sensibly set for all possible bodies the player might control.

An interesting way of using the third-person voice is to give the PC a 
generic name like "detective" (put that in the short_name and name 
properties).  Then take away the PC's proper attribute.  This will cause 
the library to address the PC as "the detective" and correctly 
capitalize the word "the".  For instance:

  [ Initialise;
      location = theroom;
      player.narrative_voice = 3;
      player.short_name = "detective";
      (player.&name)-->0 = 'detective';
      give player ~proper;
  ];

This results in a room description like this:

  > PUT FOLDER ON TABLE
  The detective puts the folder on the table.

  > LOOK

  Squad Room
  This is the 13th Precinct's squad room.

  The detective can see a table (upon which is a folder).

  > INVENTORY
  The detective is carrying:
    a badge
    a revolver

The default article used to describe a non-proper PC is "the".  If you 
want to talk about just "a detective", just set player.article to "a".

There is another property for the player object: nameless.  This has 
meaning only in the first-person or second-person narrative voices.  
Normally if you're using either of these voices and the PC switches 
bodies, the PC's former body is referred to as "My former self" or "Your 
former self".  If you want the former body to be referred to some other 
way, set player.nameless to false and set the name and short_name 
properties to something appropriate.  If third-person narrative voice is 
used, the nameless property is ignored.  "The detective" isn't 
namelessness.  It's just not a proper name.


The Library uses the CSubject subroutines to figure out when to say 
"I", "You", or "George".  You can use them too.  They are documented 
here:

Function Name:	CSubjectVerb
Parameters:	obj		The character who is doing something
		reportage
		v1
		v2
		v3

